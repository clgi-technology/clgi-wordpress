name: Terraform Auto Destroy Old Deployments

on:
  schedule:
    - cron: '0 0 * * *'  # daily at midnight UTC
  workflow_dispatch:

jobs:
  destroy_old:
    runs-on: ubuntu-latest

    env:
      TF_VAR_aws_region: "us-west-2"

      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=deployments/aws init

      - name: Get AutoDeleteAt timestamp
        id: get_auto_delete_at
        run: |
          auto_delete_at=$(terraform -chdir=deployments/aws output -raw auto_delete_at || echo "")
          echo "auto_delete_at=$auto_delete_at" >> $GITHUB_OUTPUT

      - name: Check and Destroy if expired
        if: steps.get_auto_delete_at.outputs.auto_delete_at != ''
        run: |
          auto_delete_at="${{ steps.get_auto_delete_at.outputs.auto_delete_at }}"
          echo "AutoDeleteAt timestamp: $auto_delete_at"

          now=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "Current time (UTC): $now"

          if [[ "$now" > "$auto_delete_at" ]]; then
            echo "AutoDeleteAt is in the past. Destroying Terraform deployment."
            terraform -chdir=deployments/aws destroy -auto-approve
          else
            echo "AutoDeleteAt not reached yet. Skipping destroy."
          fi

      - name: No auto_delete_at tag found, skipping destroy
        if: steps.get_auto_delete_at.outputs.auto_delete_at == ''
        run: echo "No auto_delete_at tag found; nothing to destroy."
