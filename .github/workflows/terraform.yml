name: Terraform Multi-Cloud Deployment

on:
  workflow_dispatch:
    inputs:
      cloud_provider:
        description: "Target Cloud Provider"
        required: true
        default: "aws"
      deployment_mode:
        description: "Deployment Mode (sandbox/production)"
        required: true
        default: "sandbox"
      auto_delete_after_24h:
        description: "Auto-delete after 24h"
        required: true
        default: "true"
      setup_demo_clone:
        description: "Clone demo app (true/false)"
        required: true
        default: "false"
      clone_target_url:
        description: "Git repo URL to clone (if enabled)"
        required: false
        default: ""
      vm_name:
        description: "VM Name"
        required: true
        default: "clgi-deploy"
      vm_size:
        description: "VM Size"
        required: true
        default: "t3.medium"
      region:
        description: "Cloud Region"
        required: true
        default: "us-west-2"
      ssh_allowed_cidr:
        description: "CIDR for SSH Access"
        required: true
        default: "0.0.0.0/0"
      ssh_public_key:
        description: "Public SSH Key (or use secret)"
        required: false
        default: ""

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_cloud_provider: ${{ inputs.cloud_provider }}
      TF_VAR_deployment_mode: ${{ inputs.deployment_mode }}
      TF_VAR_auto_delete_after_24h: ${{ inputs.auto_delete_after_24h }}
      TF_VAR_setup_demo_clone: ${{ inputs.setup_demo_clone }}
      TF_VAR_clone_target_url: ${{ inputs.clone_target_url }}
      TF_VAR_vm_name: ${{ inputs.vm_name }}
      TF_VAR_vm_size: ${{ inputs.vm_size }}
      TF_VAR_aws_region: ${{ inputs.region }}
      TF_VAR_ssh_allowed_ip: ${{ inputs.ssh_allowed_cidr }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_ssh_password: ${{ secrets.SSH_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Validate Secrets
        run: |
          [[ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]] && { echo "‚ùå Missing SSH_PRIVATE_KEY"; exit 1; }

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
