# terraform.yml file
name: Terraform Multi-Cloud Deployment

on:
  workflow_dispatch:
    inputs:
      cloud_provider:
        description: "Choose Cloud Provider"
        required: true
        type: choice
        options: [AWS, GCP, Azure]
        default: AWS

      deployment_mode:
        description: "sandbox = Django, production = WordPress"
        required: true
        type: choice
        options: [sandbox, production]
        default: sandbox

      auto_delete_after_24h:
        description: "Auto-delete after 24 hours (sandbox only)?"
        required: true
        type: choice
        options: [true, false]
        default: false

      vm_name:
        description: "VM Name"
        required: true
        default: "clgi-deploy"

      vm_size:
        description: "VM Size"
        required: true
        default: "t3.medium"

      region:
        description: "Region"
        required: true
        default: "us-west-2"

      ssh_allowed_cidr:
        description: "CIDR allowed to SSH (e.g. your_ip/32)"
        required: true
        default: "0.0.0.0/0"

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_cloud_provider: ${{ github.event.inputs.cloud_provider }}
      TF_VAR_deployment_mode: ${{ github.event.inputs.deployment_mode }}
      TF_VAR_auto_delete_after_24h: ${{ github.event.inputs.auto_delete_after_24h }}
      TF_VAR_vm_name: ${{ github.event.inputs.vm_name }}
      TF_VAR_vm_size: ${{ github.event.inputs.vm_size }}
      TF_VAR_region: ${{ github.event.inputs.region }}
      TF_VAR_ssh_ip_address: ${{ github.event.inputs.ssh_allowed_cidr }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}


      # Secrets (optional, if using cloud auth in Terraform modules)
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_ssh_password: ${{ secrets.SSH_PASSWORD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars"
        working-directory: ./

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file="terraform.tfvars"
        working-directory: ./

      - name: Show Output IP
        run: |
          echo "Fetching public IP from Terraform output..."
          VM_IP=$(terraform output -raw vm_ip 2>/dev/null || echo "N/A")
          echo "VM_IP=$VM_IP" >> $GITHUB_ENV
          echo "Server IP: $VM_IP"
        working-directory: ./
      - name: Setup SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

