name: Terraform Multi-Cloud Deployment

on:
  workflow_dispatch:
    inputs:
      deployment_config:
        description: |
          JSON string for deployment config, e.g.
          {
            "cloud_provider": "aws",
            "deployment_mode": "sandbox",
            "auto_delete_after_24h": true,
            "setup_demo_clone": false,
            "clone_target_url": "",
            "vm_name": "clgi-deploy",
            "vm_size": "t3.medium",
            "region": "us-west-2",
            "ssh_allowed_cidr": "0.0.0.0/0"
          }
        required: true
        default: '{}'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_cloud_provider: ${{ fromJson(inputs.deployment_config).cloud_provider }}
      TF_VAR_deployment_mode: ${{ fromJson(inputs.deployment_config).deployment_mode }}
      TF_VAR_auto_delete_after_24h: ${{ fromJson(inputs.deployment_config).auto_delete_after_24h }}
      TF_VAR_setup_demo_clone: ${{ fromJson(inputs.deployment_config).setup_demo_clone }}
      TF_VAR_clone_target_url: ${{ fromJson(inputs.deployment_config).clone_target_url }}
      TF_VAR_vm_name: ${{ fromJson(inputs.deployment_config).vm_name }}
      TF_VAR_vm_size: ${{ fromJson(inputs.deployment_config).vm_size }}
      TF_VAR_aws_region: ${{ fromJson(inputs.deployment_config).region }}
      TF_VAR_ssh_allowed_ip: ${{ fromJson(inputs.deployment_config).ssh_allowed_cidr }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_ssh_password: ${{ secrets.SSH_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check Required Secrets
        run: |
          [[ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]] && { echo "❌ Missing SSH_PRIVATE_KEY"; exit 1; }
          [[ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]] && { echo "❌ Missing AWS_ACCESS_KEY_ID"; exit 1; }
          [[ -z "${{ secrets.TF_TOKEN_app_terraform_io }}" ]] && { echo "❌ Missing TF_TOKEN_app_terraform_io"; exit 1; }

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
