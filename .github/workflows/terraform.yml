name: Terraform Multi-Cloud Deployment

on:
  workflow_dispatch:
    inputs:
      config_json:
        description: |
          JSON config for deployment, example:
          {
            "cloud_provider": "aws",
            "deployment_mode": "sandbox",
            "auto_delete_after_24h": "false",
            "setup_demo_clone": "false",
            "clone_target_url": "",
            "vm_name": "clgi-deploy",
            "vm_size": "t3.medium",
            "region": "us-west-2",
            "ssh_allowed_cidr": "0.0.0.0/0"
          }
        required: true
        default: '{"cloud_provider":"aws","deployment_mode":"sandbox","auto_delete_after_24h":"false","setup_demo_clone":"false","clone_target_url":"","vm_name":"clgi-deploy","vm_size":"t3.medium","region":"us-west-2","ssh_allowed_cidr":"0.0.0.0/0"}'

jobs:
  sync-secrets:
    uses: ./.github/workflows/sync-tfc-vars.yml
    with:
      cloud_provider: ${{ fromJson(github.event.inputs.config_json).cloud_provider }}
    secrets:
      TFC_TOKEN: ${{ secrets.TF_TOKEN_app_terraform_io }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  deploy:
    needs: sync-secrets
    runs-on: ubuntu-latest

    env:
      TF_VAR_cloud_provider: ${{ fromJson(github.event.inputs.config_json).cloud_provider }}
      TF_VAR_deployment_mode: ${{ fromJson(github.event.inputs.config_json).deployment_mode }}
      TF_VAR_auto_delete_after_24h: ${{ fromJson(github.event.inputs.config_json).auto_delete_after_24h == 'true' }}
      TF_VAR_setup_demo_clone: ${{ fromJson(github.event.inputs.config_json).setup_demo_clone == 'true' }}
      TF_VAR_clone_target_url: ${{ fromJson(github.event.inputs.config_json).clone_target_url }}
      TF_VAR_vm_name: ${{ fromJson(github.event.inputs.config_json).vm_name }}
      TF_VAR_vm_size: ${{ fromJson(github.event.inputs.config_json).vm_size }}
      TF_VAR_aws_region: ${{ fromJson(github.event.inputs.config_json).region }}
      TF_VAR_ssh_allowed_ip: ${{ fromJson(github.event.inputs.config_json).ssh_allowed_cidr }}

      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_ssh_password: ${{ secrets.SSH_PASSWORD }}

      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}

    steps:
      - name: Check Required Secrets
        run: |
          [[ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]] && { echo "‚ùå Missing SSH_PRIVATE_KEY"; exit 1; }
          [[ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]] && { echo "‚ùå Missing AWS_ACCESS_KEY_ID"; exit 1; }
          [[ -z "${{ secrets.TF_TOKEN_app_terraform_io }}" ]] && { echo "‚ùå Missing TF_TOKEN_app_terraform_io"; exit 1; }

      - name: Checkout Code
        uses: actions/checkout@v3

      # üîΩ Continue with original deployment steps here...
