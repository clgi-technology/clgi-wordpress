name: Update AWS Credentials and Terraform Cloud Variables

on:
  workflow_dispatch:
    inputs:
      aws_access_key:
        description: AWS Access Key ID
        required: true
        type: string
      aws_secret_key:
        description: AWS Secret Access Key
        required: true
        type: string
      aws_session_token:
        description: AWS Session Token (optional)
        required: false
        type: string
      terraform_org:
        description: Terraform Cloud Organization Name
        required: true
        type: string
      terraform_workspace:
        description: Terraform Cloud Workspace Name
        required: true
        type: string

jobs:
  update-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Run update-secrets.js script to update GitHub secrets
        run: node .github/scripts/update-secrets.js
        env:
          GH_PAT_FOR_SECRETS: ${{ secrets.GH_PAT_FOR_SECRETS }}
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_key }}
          AWS_SESSION_TOKEN: ${{ github.event.inputs.aws_session_token }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Update Terraform Cloud Workspace Variables
        env:
          TFC_API_TOKEN: ${{ secrets.TFC_API_TOKEN }}
          ORG_NAME: ${{ github.event.inputs.terraform_org }}
          WORKSPACE_NAME: ${{ github.event.inputs.terraform_workspace }}
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.aws_secret_key }}
          AWS_SESSION_TOKEN: ${{ github.event.inputs.aws_session_token }}
        run: |
          echo "Fetching workspace ID for $ORG_NAME / $WORKSPACE_NAME..."

          WORKSPACE_ID=$(curl -s \
            --header "Authorization: Bearer $TFC_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/organizations/$ORG_NAME/workspaces/$WORKSPACE_NAME" \
            | jq -r '.data.id')

          if [ -z "$WORKSPACE_ID" ] || [ "$WORKSPACE_ID" == "null" ]; then
            echo "❌ Workspace not found. Please check organization and workspace names."
            exit 1
          fi

          echo "Workspace ID: $WORKSPACE_ID"

          function set_variable {
            KEY=$1
            VALUE=$2
            CATEGORY=$3

            VAR_ID=$(curl -s \
              --header "Authorization: Bearer $TFC_API_TOKEN" \
              --header "Content-Type: application/vnd.api+json" \
              "https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/vars" \
              | jq -r ".data[] | select(.attributes.key==\"$KEY\") | .id")

            JSON_PAYLOAD=$(jq -n \
              --arg key "$KEY" \
              --arg value "$VALUE" \
              --arg category "$CATEGORY" \
              '{
                data: {
                  type: "vars",
                  attributes: {
                    key: $key,
                    value: $value,
                    category: $category,
                    hcl: false,
                    sensitive: true
                  }
                }
              }')

            if [ -z "$VAR_ID" ]; then
              echo "Creating variable $KEY"
              curl -s -X POST \
                --header "Authorization: Bearer $TFC_API_TOKEN" \
                --header "Content-Type: application/vnd.api+json" \
                --data "$JSON_PAYLOAD" \
                "https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/vars" > /dev/null
            else
              echo "Updating variable $KEY"
              curl -s -X PATCH \
                --header "Authorization: Bearer $TFC_API_TOKEN" \
                --header "Content-Type: application/vnd.api+json" \
                --data "$JSON_PAYLOAD" \
                "https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/vars/$VAR_ID" > /dev/null
            fi
          }

          set_variable "AWS_ACCESS_KEY_ID" "$AWS_ACCESS_KEY_ID" "env"
          set_variable "AWS_SECRET_ACCESS_KEY" "$AWS_SECRET_ACCESS_KEY" "env"

          if [ -n "$AWS_SESSION_TOKEN" ]; then
            set_variable "AWS_SESSION_TOKEN" "$AWS_SESSION_TOKEN" "env"
          fi

          echo "✅ Terraform Cloud variables updated successfully."
