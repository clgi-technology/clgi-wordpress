name: Terraform Destroy Deployment

on:
  workflow_dispatch:
    inputs:
      cloud_provider:
        description: "Cloud provider (aws, gcp, azure)"
        required: true
        type: choice
        options: [aws, gcp, azure]

jobs:
  destroy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_cloud_provider: ${{ inputs.cloud_provider }}

      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
      TF_VAR_ssh_password: ${{ secrets.SSH_PASSWORD }}
      TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_gcp_credentials: ${{ secrets.GCP_CREDENTIALS_JSON }}
      TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        run: |
          curl -fsSL https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Configure Terraform CLI authentication
        run: |
          mkdir -p ~/.terraform.d
          echo '{"credentials":{"app.terraform.io":{"token":"'"${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}"'"}}}' > ~/.terraform.d/credentials.tfrc.json

      - name: Terraform Init
        run: terraform -chdir=deployments/${{ inputs.cloud_provider }} init

      - name: Terraform Destroy (auto approve)
        run: |
          terraform -chdir=deployments/${{ inputs.cloud_provider }} destroy -auto-approve \
            -var "ssh_password=${{ secrets.SSH_PASSWORD }}" \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
            -var "ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" \
            -var "gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var "gcp_credentials=${{ secrets.GCP_CREDENTIALS_JSON }}" \
            -var "azure_client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var "azure_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var "azure_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var "azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}"

