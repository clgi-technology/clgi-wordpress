#!/bin/bash
set -euxo pipefail
export DEBIAN_FRONTEND=noninteractive

echo "üì¶ Bootstrapping VM for deployment mode: ${deployment_mode}"

# Wait for package manager lock (up to 5 minutes)
for i in $(seq 1 30); do
  if ! lsof /var/run/yum.pid >/dev/null 2>&1 && ! lsof /var/run/dpkg.lock >/dev/null 2>&1; then
    break
  fi
  echo "‚è≥ Waiting for package manager lock..."
  sleep 10
done

# Install dependencies
if command -v yum >/dev/null 2>&1; then
  echo "Using yum package manager"
  yum update -y
  yum install -y python3 python3-pip curl dos2unix
elif command -v apt-get >/dev/null 2>&1; then
  echo "Using apt-get package manager"
  apt-get update -y
  apt-get install -y python3 python3-pip curl dos2unix
else
  echo "‚ùå Unsupported package manager. Exiting."
  exit 1
fi

pip3 install --user requests beautifulsoup4

mkdir -p /home/ec2-user/scripts
cd /home/ec2-user/scripts

# Define script URLs
SCRIPTS_URL="https://raw.githubusercontent.com/clgi-technology/clgi-wordpress/main/scripts"

# Download or fall back to embedded scripts
download_or_fallback() {
  local script_name="$1"
  local fallback_content="$2"
  if ! curl --retry 5 --retry-delay 5 -fSL "${SCRIPTS_URL}/${script_name}" -o "${script_name}"; then
    echo "‚ö†Ô∏è Failed to download ${script_name}, using fallback"
    echo "${fallback_content}" > "${script_name}"
  fi
  dos2unix "${script_name}" || true
  chmod +x "${script_name}"
}

# Fallback install-django.sh
fallback_django='#!/bin/bash
echo "‚ö†Ô∏è Running fallback Django installer"
pip3 install --user django gunicorn
'

# Fallback install-wordpress.sh
fallback_wordpress='#!/bin/bash
echo "‚ö†Ô∏è Running fallback WordPress installer"
yum install -y httpd php php-mysqlnd mariadb-server -y || apt-get install -y apache2 php libapache2-mod-php mariadb-server
'

# Fallback install-clgi.sh
fallback_clgi='#!/bin/bash
MODE=$1
echo "‚ö†Ô∏è Running fallback CLGI demo clone (mode=$MODE)"
echo "<html><body><h1>CLGI Demo - Mode: $MODE</h1></body></html>" > /var/www/html/index.html
'

download_or_fallback install-django.sh "$fallback_django"
download_or_fallback install-wordpress.sh "$fallback_wordpress"
download_or_fallback install-clgi.sh "$fallback_clgi"

# Run stack installer
if [ "${deployment_mode}" = "sandbox" ]; then
  echo "‚öôÔ∏è Installing Django stack..."
  ./install-django.sh || { echo "‚ùå Django install failed"; exit 1; }
else
  echo "‚öôÔ∏è Installing WordPress stack..."
  ./install-wordpress.sh || { echo "‚ùå WordPress install failed"; exit 1; }
fi

# Clone optional demo content
if [ "${setup_demo_clone}" != "none" ]; then
  echo "üåê Cloning demo content from ${clone_target_url}, mode ${setup_demo_clone}"
  ./install-clgi.sh "${setup_demo_clone}" || echo "‚ö†Ô∏è install-clgi.sh failed, continuing"
fi

echo "‚úÖ Provisioning complete."
