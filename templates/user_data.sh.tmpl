#!/bin/bash
set -e

echo "üöÄ Starting VM setup..."
echo "Deployment Mode: ${deployment_mode}"
echo "Clone Target: ${clone_target_url}"
echo "Demo Clone Enabled: ${setup_demo_clone}"

# Variables
SCRIPTS_BASE_URL="https://raw.githubusercontent.com/clgi-technology/clgi-wordpress/main/scripts"

# Update system
apt-get update -y
apt-get upgrade -y

# Install common dependencies
apt-get install -y curl wget unzip git

# Create script workspace
mkdir -p /opt/setup-scripts
cd /opt/setup-scripts

# Fetch shared scripts
wget -q "${SCRIPTS_BASE_URL}/install-wordpress.sh" -O install-wordpress.sh
chmod +x install-wordpress.sh

wget -q "${SCRIPTS_BASE_URL}/install-django.sh" -O install-django.sh
chmod +x install-django.sh

wget -q "${SCRIPTS_BASE_URL}/install-clgi.sh" -O install-clgi.sh
chmod +x install-clgi.sh

# Optional: fetch Python clone script if needed
if [ "${setup_demo_clone}" = "true" ]; then
  echo "üåê Fetching clone_clgi.py..."
  wget -q "${SCRIPTS_BASE_URL}/clone_clgi.py" -O clone_clgi.py
fi

# Run deployment mode logic
if [ "${deployment_mode}" = "production" ]; then
  echo "üü¢ Installing WordPress stack..."
  bash install-wordpress.sh

elif [ "${deployment_mode}" = "sandbox" ]; then
  echo "üü† Installing Django stack..."
  bash install-django.sh

  if [ "${setup_demo_clone}" = "true" ]; then
    echo "üåê Integrating CLGI.org static clone..."
    bash install-clgi.sh
  fi

else
  echo "‚ùå ERROR: Unknown deployment_mode: ${deployment_mode}"
  exit 1
fi

echo "‚úÖ VM setup complete!"
