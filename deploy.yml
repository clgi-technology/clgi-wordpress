name: Terraform Deployment

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_VAR_cloud_provider: ${{ secrets.TF_CLOUD_PROVIDER || 'aws' }}
      TF_VAR_vm_name: ${{ secrets.TF_VM_NAME }}
      TF_VAR_vm_size: ${{ secrets.TF_VM_SIZE }}
      TF_VAR_region: ${{ secrets.TF_REGION }}
      TF_VAR_github_token: ${{ secrets.GH_TOKEN }}
      TF_VAR_github_repo: ${{ secrets.GH_REPO }}
      TF_VAR_gcp_project: ${{ secrets.TF_GCP_PROJECT }}
      TF_VAR_gcp_credentials_path: ${{ secrets.TF_GCP_CREDENTIALS_PATH }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_deployment_mode: ${{ secrets.TF_DEPLOYMENT_MODE || 'sandbox' }}

    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v3

      - name: ðŸ”§ Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: ðŸ›  Format Terraform Code
        run: terraform fmt -recursive

      - name: ðŸ”„ Initialize Terraform
        run: terraform init

      - name: âœ… Validate Terraform Configuration
        run: terraform validate

      - name: ðŸ“œ Preview Terraform Plan
        run: terraform plan

      - name: ðŸš€ Apply Terraform Deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          if [[ "${{ env.TF_VAR_deployment_mode }}" == "production" ]]; then
            echo "âš¡ Deploying Production Environment..."
            terraform apply -auto-approve
          else
            echo "ðŸ›  Deploying Sandbox Environment..."
            terraform apply -auto-approve -var="deployment_mode=sandbox"
          fi